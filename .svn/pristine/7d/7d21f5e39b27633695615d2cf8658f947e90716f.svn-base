<?php
class ci_comision_evaluacion_seleccion extends sap_ci
{
	protected $s__filtro;
	protected $ruta_documentos; //url
	protected $path_documentos; //ruta local
	protected $s__solicitud; //Mantiene la clave de la solicitud seleccionada durante la evaluacion
	//-----------------------------------------------------------------------------------
	//---- Configuraciones --------------------------------------------------------------
	//-----------------------------------------------------------------------------------

	function conf()
	{
		//ubicacion del directorio donde se guardan los documentos (si tiene barra al final, se quita)
		$base_documentos = toba::consulta_php('co_tablas_basicas')->get_parametro_conf('url_base_documentos');
		if(substr($base_documentos,strlen($base_documentos)-1,1) === '/'){
			$base_documentos = substr($base_documentos,0,strlen($base_documentos)-1);
		}
		$this->ruta_documentos = toba::consulta_php('co_tablas_basicas')->get_parametro_conf('ruta_base_documentos');
		$this->path_documentos = toba::consulta_php('co_tablas_basicas')->get_parametro_conf('url_base_documentos');
	}

	function evt__volver()
	{
		$this->get_datos()->resetear();
		$this->set_pantalla('pant_seleccion');
	}

	function evt__guardar()
	{
		try {

			$this->get_datos()->sincronizar();	
			$this->get_datos()->resetear();
			$this->set_pantalla('pant_seleccion');
		}catch(toba_error_db $e){
			toba::notificacion()->agregar($e->get_mensaje_motor(),'error');
		}catch (Exception $e) {
			toba::notificacion()->agregar($e->getMessage(),'error');
		}
		
		
	}

	//-----------------------------------------------------------------------------------
	//---- cu_postulaciones -------------------------------------------------------------
	//-----------------------------------------------------------------------------------

	function conf__cu_postulaciones(sap_ei_cuadro $cuadro)
	{
		$filtro = ($this->s__filtro) ? $this->s__filtro : array();
		
		//Solo inscripciones cerradas y admitidas
		$filtro['admisible']     = 'S';
		$filtro['estado']        = 'C';
		// No se pueden evaluar postulaciones que ya tienen la beca otorgada
		$filtro['beca_otorgada']            = 'N';
		$filtro['evaluable_por_comisiones'] = true;

		if(!in_array('admin',toba::usuario()->get_perfiles_funcionales())){
			//Si no es administrador, solo le muestro la última convocatoria y solo su area de conocimiento
			$id_convocatoria = toba::consulta_php('co_convocatoria_beca')->get_id_ultima_convocatoria(TRUE);
			if(!toba::consulta_php('co_convocatoria_beca')->permite_evaluacion_comisiones($id_convocatoria)){
				$cuadro->agregar_notificacion('La convocatoria todavía no está en etapa de evaluación (o ya finalizó)');
				return;
			}
			$this->dep('form_filtro')->ef('id_convocatoria')->set_estado($id_convocatoria);

			$filtro['id_convocatoria'] = $id_convocatoria;
			$filtro['id_area_conocimiento'] = toba::consulta_php('co_comision_asesora')->get_area_conocimiento_evaluador(toba::usuario()->get_id());	
			
			$this->dep('form_filtro')->ef('id_area_conocimiento')->set_estado($filtro['id_area_conocimiento']);
			$this->dep('form_filtro')->set_solo_lectura(array('id_convocatoria','id_area_conocimiento'));

			//quito la columna de puntajes
			$cuadro->eliminar_columnas(array('puntaje_comision'));
		}/*else{
			$cuadro->eliminar_columnas(array('evaluado_comision'));
		}*/
		
		$cuadro->set_datos(toba::consulta_php('co_inscripcion_conv_beca')->get_inscripciones($filtro));
	}

	function evt__cu_postulaciones__seleccion($seleccion)
	{
		$seleccion['tipo_dictamen'] = 'C';	
		$this->s__solicitud = $seleccion;
		$this->get_datos()->cargar($seleccion);
		$this->set_pantalla('pant_edicion');

	}

	//-----------------------------------------------------------------------------------
	//---- form_filtro ------------------------------------------------------------------
	//-----------------------------------------------------------------------------------

	function conf__form_filtro(sap_ei_formulario $form)
	{
		if(isset($this->s__filtro)){
			$form->set_datos($this->s__filtro);
		}
	}

	function evt__form_filtro__filtrar($datos)
	{
		$this->s__filtro = $datos;
	}

	function evt__form_filtro__cancelar()
	{
		unset($this->s__filtro);
	}


	function conf__pant_edicion(toba_ei_pantalla $pantalla)
	{
		if(!$this->s__solicitud){
			throw new toba_error('No se ha seleccionado una solicitud para evaluar');
		}
		//busco todos los detalles de la postulaci?
		$detalles = toba::consulta_php('co_inscripcion_conv_beca')->get_detalles_comprobante($this->s__solicitud);
		//si el tipo de beca contempla el puntaje acad?ico, lo muestro al evaluador
		$puntaje = ($detalles['beca']['suma_puntaje_academico'] == 'S') ? $detalles['postulante']['puntaje'] : "";
		/* EL TEMPLATE COMPLETO SE ARMA EN FORMA ESCALONADA: EN EL NIVEL MAS BAJO, SE GENERA EL TEMPLATE CON LOS CARGOS DEL DIRECTOR (CO-DIRECTOR Y/O SUB-DIRECTO). ESE MINI-TEMPLATE SE EMBEBE DENTRO DEL TEMPLATE DE DIRECTOR, Y LUEGO, AMBOS DENTRO DEL TEMPLATE COMPLETO */

		//ruta al plan de trabajo
		$plan = $this->path_documentos.'/becas/doc_por_convocatoria/'.$detalles['beca']['id_convocatoria']."/".$detalles['beca']['id_tipo_beca']."/".$detalles['postulante']['nro_documento']."/Plan de Trabajo.pdf";
		//la variable datos contendrá todos los valores que irá al template
		$datos = array(
			'titulo_plan_beca'   => $detalles['beca']['titulo_plan_beca'],
			'id_proyecto'        => $detalles['proyecto']['id'],
			'proyecto_nombre'    => $detalles['proyecto']['proyecto'],
			'nombre_postulante'  => $detalles['postulante']['apellido'].", ".$detalles['postulante']['nombres'],
			'cuil'               => $detalles['postulante']['cuil'],
			'carrera'            => $detalles['postulante']['carrera'],
			'tipo_beca'          => ucwords(strtolower($detalles['beca']['tipo_beca'])),
			'nro_carpeta'        => $detalles['beca']['nro_carpeta'],
			'area_conocimiento'  => ucwords(strtolower($detalles['beca']['area_conocimiento'])),
			'enlace_plan_trab'   => urldecode($plan),
			'puntaje_inicial'    => $puntaje,
			'puntaje_final'		 => $detalles['postulante']['puntaje_comision'],
			'tipo_dictamen'      => 'Comisión'
		);
		$datos['denominacion_grupo'] = ($detalles['beca']['denominacion_grupo']) ? $detalles['beca']['denominacion_grupo'] : 'No incluído en un grupo de investigación';

		//Obtengo los detalles del director de esta solicitud y genero el template con sus datos
		$director = toba::consulta_php('co_inscripcion_conv_beca')->get_detalles_director($this->s__solicitud);
		$datos['direccion'] = $this->armar_template_direccion($director,'Director');
		
		//lo mismo para el co-director y el sub-director (si existen)
		if(isset($detalles['codirector'])){
			$director = toba::consulta_php('co_inscripcion_conv_beca')->get_detalles_director($this->s__solicitud,'codir');
			$datos['direccion'] .= $this->armar_template_direccion($director,'Co-Director');
		}
		
		if(isset($detalles['subdirector'])){
			$director = toba::consulta_php('co_inscripcion_conv_beca')->get_detalles_director($this->s__solicitud,'subdir');
			$datos['direccion'] .= $this->armar_template_direccion($director,'Sub-Director');
		}
		//genero los parametros necesarios para enviarselos a la operación que generará el PDF del proyecto
		$params = array('reporte'=>'reporte_proyecto','ver_completo'=>0,'id_proyecto'=>$detalles['proyecto']['id']);
		//Obtengo un enlace a una operación que genera el PDF del proyecto. Es una operación independiente.
		$datos['enlace_pdf_proyecto'] = toba::vinculador()->get_url(NULL,'3763', $params);

		$criterios_evaluacion    = toba::consulta_php('co_comision_asesora')->get_criterios_evaluacion($this->s__solicitud);
		
		/*foreach ($criterios_evaluacion as &$criterio_evaluacion) {
			$id_criterio = $criterio_evaluacion['id_criterio_evaluacion'];
			$criterio_evaluacion['subcriterios_evaluacion'] = toba::consulta_php('co_comision_asesora')->get_subcriterios_evaluacion($id_criterio);
		}
*/
		$datos['formularios_evaluacion'] = $this->armar_template(__DIR__.'/templates/template_eval_comision.php', ['criterios_evaluacion' => $criterios_evaluacion]);
		
		//Armo el template completo
		$template_completo = file_get_contents(__DIR__.'/templates/template_evaluacion.php');
		foreach ($datos as $clave => $valor) {
			$template_completo = str_replace("{{".$clave."}}",$valor,$template_completo);
		}

		$pantalla->set_template($template_completo);
	}

	function armar_template_direccion($director,$rol)
	{
		//Armo el template de los cargos
		$cargos = toba::consulta_php('co_personas')->get_cargos_persona($director['nro_documento']);
		$lista_cargos = $this->armar_template_cargos($cargos);
		
		//Armo el template de director
		$cat_incentivos = array(1=>'Categoría I',2=>'Categoría II',3=>'Categoría III',4=>'Categoría IV',5=>'Categoría V');
		$datos_template_director = array(
			'rol'           => $rol,
			'ayn'           => $director['apellido'].", ".$director['nombres'],
			'dni'           => $director['nro_documento'],
			'categoria_inc' => (isset($cat_incentivos[$director['catinc']]) ) ? $cat_incentivos[$director['catinc']] :'No categorizado',
			'categoria_con' => $director['catconicet'],
			'enlace_cvar'   => $this->path_documentos."/docum_personal/".$director['nro_documento']."/cvar.pdf",
			'cargos'        => $lista_cargos,

		);
		$template_director = file_get_contents(__DIR__.'/templates/template_director.php');
		foreach ($datos_template_director as $clave => $valor) {
			$template_director = str_replace("{{".$clave."}}",$valor,$template_director);
		}
		
		return $template_director;
	}

	function armar_template_cargos($cargos)
	{
		$lista_cargos = "";
		//por cada cargo, se agrega una nueva linea al template
		foreach ($cargos as $cargo){
			//se obtiene el template vac?
			$template_cargos = file_get_contents(__DIR__.'/templates/template_cargo.php');
			$cargo['clase_css'] = ($cargo['fecha_hasta'] >= date('Y-m-d')) ? 'cargo_vigente' : ''; 
			$cargo['fecha_desde'] = (new DateTime($cargo['fecha_desde']))->format('d-m-Y');
			$cargo['fecha_hasta'] = (new DateTime($cargo['fecha_hasta']))->format('d-m-Y');

			//$cargo['fecha_desde'] = $cargo['fecha_desde']->format('d-m-Y');
			foreach ($cargo as $clave => $valor) {
				$template_cargos = str_replace("{{".$clave."}}",$valor,$template_cargos);  	
			}
			//agrego el cargo generado a la lista
			$lista_cargos .= $template_cargos;
		}
		return $lista_cargos;
	}

	/** =============================================================================
	 *              CONFIGURACION DE LOS CUADROS DE ANTECEDENTES
	 * ============================================================================= */
	/* =============== ANTECEDENTES DE DOCENCIA =================*/
	function conf__cu_actividades_docentes(sap_ei_cuadro $cuadro)
	{
		$cuadro->desactivar_modo_clave_segura();
		$cuadro->set_datos(toba::consulta_php('co_inscripcion_conv_beca')->get_antec_activ_docentes($this->s__solicitud));
	}

	function servicio__antec_docencia_pdf()
	{
		$params = toba::memoria()->get_parametros();
		$campos = toba::consulta_php('co_inscripcion_conv_beca')->get_campos(array('doc_probatoria','nro_documento'),'be_antec_activ_docentes','id_antecedente = '.$params['id_antecedente']);
		
		$ruta = $this->path_documentos."/doc_probatoria/".$campos['nro_documento']."/activ_docente/".$campos['doc_probatoria'];

		$this->mostrar_pdf($ruta);
	}

	/* =============== ESTUDIOS AFINES =================*/
	function conf__cu_estudios_afines(sap_ei_cuadro $cuadro)
	{
		$cuadro->desactivar_modo_clave_segura();
		$cuadro->set_datos(toba::consulta_php('co_inscripcion_conv_beca')->get_antec_estudios_afines($this->s__solicitud));
	}
	function servicio__antec_estudio_afin_pdf()
	{
		$params = toba::memoria()->get_parametros();
		$campos = toba::consulta_php('co_inscripcion_conv_beca')->get_campos(array('doc_probatoria','nro_documento'),'be_antec_estudios_afines','id_estudio_afin = '.$params['id_estudio_afin']);
		
		$ruta = $this->path_documentos."/doc_probatoria/".$campos['nro_documento']."/estudios_afines/".$campos['doc_probatoria'];

		$this->mostrar_pdf($ruta);
	}

	/* =============== ANTECEDENTES DE BECAS OBTENIDAS =================*/
	function conf__cu_becas_obtenidas(sap_ei_cuadro $cuadro)
	{
		$cuadro->desactivar_modo_clave_segura();
		$cuadro->set_datos(toba::consulta_php('co_inscripcion_conv_beca')->get_antec_becas_obtenidas($this->s__solicitud));
	}

	function servicio__antec_becas_obtenidas_pdf()
	{
		$params = toba::memoria()->get_parametros();
		$campos = toba::consulta_php('co_inscripcion_conv_beca')->get_campos(array('doc_probatoria','nro_documento'),'be_antec_becas_obtenidas','id_beca_obtenida = '.$params['id_beca_obtenida']);
		
		$ruta = $this->path_documentos."/doc_probatoria/".$campos['nro_documento']."/becas_obtenidas/".$campos['doc_probatoria'];

		$this->mostrar_pdf($ruta);
	}

	/* =============== ANTECEDENTES DE TRABAJOS PUBLICADOS =================*/
	function conf__cu_trabajos_publicados(sap_ei_cuadro $cuadro)
	{
		$cuadro->desactivar_modo_clave_segura();
		$cuadro->set_datos(toba::consulta_php('co_inscripcion_conv_beca')->get_antec_trabajos_publicados($this->s__solicitud));
	}

	function servicio__antec_trabajos_publicados_pdf()
	{
		$params = toba::memoria()->get_parametros();
		$campos = toba::consulta_php('co_inscripcion_conv_beca')->get_campos(array('doc_probatoria','nro_documento'),'be_antec_trabajos_publicados','id_trabajo_publicado = '.$params['id_trabajo_publicado']);
		
		$ruta = $this->path_documentos."/doc_probatoria/".$campos['nro_documento']."/trabajos_publicados/".$campos['doc_probatoria'];

		$this->mostrar_pdf($ruta);
	}

	/* =============== ANTECEDENTES DE PRESENTACI? EN REUNIONES =================*/
	function conf__cu_present_reuniones(sap_ei_cuadro $cuadro)
	{
		$cuadro->desactivar_modo_clave_segura();
		$cuadro->set_datos(toba::consulta_php('co_inscripcion_conv_beca')->get_antec_present_reuniones($this->s__solicitud));
	}

	function servicio__antec_present_reuniones_pdf()
	{
		$params = toba::memoria()->get_parametros();
		$campos = toba::consulta_php('co_inscripcion_conv_beca')->get_campos(array('doc_probatoria','nro_documento'),'be_antec_present_reuniones','id_present_reunion = '.$params['id_present_reunion']);
		
		$ruta = $this->path_documentos."/doc_probatoria/".$campos['nro_documento']."/presentacion_reuniones/".$campos['doc_probatoria'];

		$this->mostrar_pdf($ruta);
	}

	/* =============== ANTECEDENTES DE CONOCIMIENTO IDIOMAS =================*/
	function conf__cu_idiomas(sap_ei_cuadro $cuadro)
	{
		$cuadro->desactivar_modo_clave_segura();
		$cuadro->set_datos(toba::consulta_php('co_inscripcion_conv_beca')->get_antec_conocimiento_idiomas($this->s__solicitud));
	}

	function servicio__antec_conocimiento_idiomas_pdf()
	{
		$params = toba::memoria()->get_parametros();
		$campos = toba::consulta_php('co_inscripcion_conv_beca')->get_campos(array('doc_probatoria','nro_documento'),'be_antec_conoc_idiomas','id_conocimiento_idioma = '.$params['id_conocimiento_idioma']);
		
		$ruta = $this->path_documentos."/doc_probatoria/".$campos['nro_documento']."/conocimiento_idiomas/".$campos['doc_probatoria'];

		$this->mostrar_pdf($ruta);
	}

	/* =============== ANTECEDENTES DE OTRAS ACTIVIDADES =================*/
	function conf__cu_otras_actividades(sap_ei_cuadro $cuadro)
	{
		$cuadro->desactivar_modo_clave_segura();
		$cuadro->set_datos(toba::consulta_php('co_inscripcion_conv_beca')->get_antec_otras_actividades($this->s__solicitud));
	}

	function servicio__antec_otras_actividades_pdf()
	{
		$params = toba::memoria()->get_parametros();
		$campos = toba::consulta_php('co_inscripcion_conv_beca')->get_campos(array('doc_probatoria','nro_documento'),'be_antec_otras_actividades','id_otra_actividad = '.$params['id_otra_actividad']);
		
		$ruta = $this->path_documentos."/doc_probatoria/".$campos['nro_documento']."/otras_actividades/".$campos['doc_probatoria'];

		$this->mostrar_pdf($ruta);
	}

	/* =============== ANTECEDENTES DE PARTICIPACION EN DICTADO DE CURSOS =================*/
	function conf__cu_part_dict_cursos(sap_ei_cuadro $cuadro)
	{
		$cuadro->desactivar_modo_clave_segura();
		$cuadro->set_datos(toba::consulta_php('co_inscripcion_conv_beca')->get_antec_particip_dict_cursos($this->s__solicitud));
	}

	function servicio__antec_particip_dict_cursos_pdf()
	{
		$params = toba::memoria()->get_parametros();
		$campos = toba::consulta_php('co_inscripcion_conv_beca')->get_campos(array('doc_probatoria','nro_documento'),'be_antec_particip_dict_cursos','id_particip_cursos = '.$params['id_particip_cursos']);
		
		$ruta = $this->path_documentos."/doc_probatoria/".$campos['nro_documento']."/part_dict_cursos/".$campos['doc_probatoria'];

		$this->mostrar_pdf($ruta);
	}

	/* =============== ANTECEDENTES DE PARTICIPACION EN DICTADO DE CURSOS =================*/
	function conf__cu_cursos_perfeccionamiento(sap_ei_cuadro $cuadro)
	{
		$cuadro->desactivar_modo_clave_segura();
		$cuadro->set_datos(toba::consulta_php('co_inscripcion_conv_beca')->get_antec_cursos_perfeccionamiento($this->s__solicitud));
	}

	function servicio__antec_cursos_perfeccionamiento_pdf()
	{
		$params = toba::memoria()->get_parametros();
		$campos = toba::consulta_php('co_inscripcion_conv_beca')->get_campos(array('doc_probatoria','nro_documento'),'be_antec_cursos_perfec_aprob','id_curso_perfec_aprob = '.$params['id_curso_perfec_aprob']);
		
		$ruta = $this->path_documentos."/doc_probatoria/".$campos['nro_documento']."/cursos_perfec_aprob/".$campos['doc_probatoria'];

		$this->mostrar_pdf($ruta);
	}

	//-----------------------------------------------------------------------------------
	//---- form_evaluacion --------------------------------------------------------------
	//-----------------------------------------------------------------------------------

	function conf__form_evaluacion_fijo(sap_ei_formulario $form)
	{
		$dictamen = $this->get_datos('be_dictamen')->get();
		if($dictamen){
			$form->set_datos($dictamen);
		}	
	}

	function evt__form_evaluacion_fijo__modificacion($datos)
	{
		$datos = array_merge($datos,$this->s__solicitud);
		$datos['fecha'] = (isset($datos['fecha'])) ? $datos['fecha'] : date('Y-m-d');
		$datos['usuario_id'] = toba::usuario()->get_id();
		$this->get_datos('be_dictamen')->set($datos);
	}

	function conf__form_evaluacion_criterios(sap_ei_formulario_ml $ml)
	{
		//obtengo los detalles de la postulaci? y los criterios de evaluaci? que le corresponden por su tipo
		$criterios = toba::consulta_php('co_comision_asesora')->get_criterios_evaluacion($this->s__solicitud);
		
		//si ya existe una evaluacion previa, solo la asigno al formulario ML
		$filas = $this->get_datos('be_dictamen_detalle')->get_filas();
		if($filas){
			$ml->set_datos($filas);
		}else{
			//si no existe una evaluaci? previa, genero las filas con los criterios que le corresponde
			foreach($criterios as $criterio){
				$ml->agregar_registro(array('id_criterio_evaluacion'=>$criterio['id_criterio_evaluacion'],
											  'criterio_evaluacion' =>$criterio['criterio_evaluacion'],
											  'puntaje'             =>'',
											  'puntaje_maximo'      =>$criterio['puntaje_maximo']));
			}
		}
	}

	function evt__form_evaluacion_criterios__modificacion($datos)
	{
		$this->get_datos('be_dictamen_detalle')->procesar_filas($datos);

	}

	//-----------------------------------------------------------------------------------
	//---- ml_evaluadores ---------------------------------------------------------------
	//-----------------------------------------------------------------------------------

	function conf__form_evaluadores(sap_ei_formulario $form)
	{
		$datos = $this->get_datos('be_dictamen')->get();
		if($datos){
			$evaluadores = explode("/",$datos['evaluadores']);
			$form->set_datos(array('evaluadores'=>$evaluadores));
		}
	}

	function evt__form_evaluadores__modificacion($datos)
	{
		$evaluadores = implode('/',$datos['evaluadores']);
		$this->get_datos('be_dictamen')->set(array('evaluadores'=>$evaluadores,'usuario_id'=>toba::usuario()->get_id()));
		
	}

	

	function get_datos($tabla = NULL)
	{
		return ($tabla) ? $this->dep('datos')->tabla($tabla) : $this->dep('datos');
	}

	function mostrar_pdf($archivo)
	{	
		header("Location: ".utf8_encode($archivo));
	}

	function extender_objeto_js()
	{

		echo "
		
		var ml_requisitos = {$this->objeto_js}.dep('form_evaluacion_criterios');
		console.log(ml_requisitos);

		$(document).ready(function(){
				$('body,html').animate({scrollTop : 0}, 500);
				return;
			})";
	}

	



}
?>